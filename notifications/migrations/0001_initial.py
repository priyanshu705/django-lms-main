# Generated by Django 5.2.7 on 2025-10-15 10:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("course", "0005_videoprogress"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_progress_updates",
                    models.BooleanField(
                        default=True, help_text="Receive email for progress updates"
                    ),
                ),
                (
                    "email_course_completion",
                    models.BooleanField(
                        default=True, help_text="Receive email for course completions"
                    ),
                ),
                (
                    "email_achievements",
                    models.BooleanField(
                        default=True, help_text="Receive email for achievements"
                    ),
                ),
                (
                    "email_announcements",
                    models.BooleanField(
                        default=True, help_text="Receive email for announcements"
                    ),
                ),
                (
                    "email_reminders",
                    models.BooleanField(
                        default=True, help_text="Receive email for reminders"
                    ),
                ),
                (
                    "app_progress_updates",
                    models.BooleanField(
                        default=True, help_text="Show in-app progress notifications"
                    ),
                ),
                (
                    "app_course_completion",
                    models.BooleanField(
                        default=True, help_text="Show in-app completion notifications"
                    ),
                ),
                (
                    "app_achievements",
                    models.BooleanField(
                        default=True, help_text="Show in-app achievement notifications"
                    ),
                ),
                (
                    "app_announcements",
                    models.BooleanField(
                        default=True, help_text="Show in-app announcements"
                    ),
                ),
                (
                    "app_reminders",
                    models.BooleanField(
                        default=True, help_text="Show in-app reminders"
                    ),
                ),
                (
                    "digest_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily", "Daily Digest"),
                            ("weekly", "Weekly Digest"),
                            ("never", "Never"),
                        ],
                        default="immediate",
                        help_text="How often to receive notification digests",
                        max_length=20,
                    ),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True,
                        help_text="Start of quiet hours (no notifications)",
                        null=True,
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True, help_text="End of quiet hours", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Short notification title", max_length=200
                    ),
                ),
                (
                    "message",
                    models.TextField(help_text="Detailed notification message"),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("progress_update", "Progress Update"),
                            ("course_completion", "Course Completion"),
                            ("video_completion", "Video Completion"),
                            ("achievement", "Achievement"),
                            ("announcement", "Announcement"),
                            ("reminder", "Reminder"),
                            ("milestone", "Milestone"),
                            ("welcome", "Welcome"),
                        ],
                        default="announcement",
                        help_text="Type of notification",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        help_text="Notification priority level",
                        max_length=10,
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the notification has been read",
                    ),
                ),
                (
                    "is_sent",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the notification has been sent/delivered",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the notification was created"
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was read",
                        null=True,
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was sent",
                        null=True,
                    ),
                ),
                (
                    "action_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to redirect when notification is clicked",
                        null=True,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="bell",
                        help_text="Font Awesome icon name",
                        max_length=50,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="primary",
                        help_text="Bootstrap color class",
                        max_length=20,
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        help_text="User who will receive this notification",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_course",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related course if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.course",
                    ),
                ),
                (
                    "related_video",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related video if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.uploadvideo",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "-created_at"],
                        name="notificatio_recipie_a972ce_idx",
                    ),
                    models.Index(
                        fields=["recipient", "is_read"],
                        name="notificatio_recipie_4e3567_idx",
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="notificatio_notific_f2898f_idx",
                    ),
                ],
            },
        ),
    ]
